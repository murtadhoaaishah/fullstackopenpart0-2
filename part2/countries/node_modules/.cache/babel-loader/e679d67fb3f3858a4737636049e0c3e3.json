{"ast":null,"code":"var _jsxFileName = \"/Users/murtadhoaaishah/Desktop/workspace/fs-open/part2/countries/src/App.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all').then(response => {\n      setCountries(response.data);\n    });\n  }, []);\n  console.log(countries);\n  const filteredCountries = query.trim() ? countries.filter(country => country.name.common.toLowerCase().includes(query.trim().toLowerCase())) : [];\n\n  const outcome = () => {\n    if (filteredCountries.length < 10) {\n      filteredCountries.map((country, countryIndex) => /*#__PURE__*/React.createElement(\"li\", {\n        key: `country_${countryIndex}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, country.name.common));\n    } else if (filteredCountries.length === 1) {\n      filteredCountries.map((country, countryIndex) => /*#__PURE__*/React.createElement(\"li\", {\n        key: `country_${countryIndex}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, country.name.common, \",\", country.languages, \",\", country.flags, \",\", country.currencies));\n    } else {\n      'Too many matches, specify another filter';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, outcome));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/murtadhoaaishah/Desktop/workspace/fs-open/part2/countries/src/App.jsx"],"names":["React","useState","useEffect","axios","App","countries","setCountries","query","setQuery","get","then","response","data","console","log","filteredCountries","trim","filter","country","name","common","toLowerCase","includes","outcome","length","map","countryIndex","languages","flags","currencies","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFM,GADH,CACO,oCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBL,MAAAA,YAAY,CAACK,QAAQ,CAACC,IAAV,CAAZ;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AAEA,QAAMU,iBAAiB,GAAGR,KAAK,CAACS,IAAN,KACtBX,SAAS,CAACY,MAAV,CAAiBC,OAAO,IACxBA,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBC,WAApB,GACGC,QADH,CACYf,KAAK,CAACS,IAAN,GAAaK,WAAb,EADZ,CADA,CADsB,GAItB,EAJJ;;AAMA,QAAME,OAAO,GAAG,MAAM;AACpB,QAAIR,iBAAiB,CAACS,MAAlB,GAA2B,EAA/B,EAAmC;AACjCT,MAAAA,iBAAiB,CAACU,GAAlB,CAAsB,CAACP,OAAD,EAAUQ,YAAV,kBACpB;AAAI,QAAA,GAAG,EAAG,WAAUA,YAAa,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCR,OAAO,CAACC,IAAR,CAAaC,MAAlD,CADF;AAED,KAHD,MAGO,IAAIL,iBAAiB,CAACS,MAAlB,KAA6B,CAAjC,EAAoC;AACzCT,MAAAA,iBAAiB,CAACU,GAAlB,CAAsB,CAACP,OAAD,EAAUQ,YAAV,kBACpB;AAAI,QAAA,GAAG,EAAG,WAAUA,YAAa,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,OAAO,CAACC,IAAR,CAAaC,MADhB,OAEGF,OAAO,CAACS,SAFX,OAGGT,OAAO,CAACU,KAHX,OAIGV,OAAO,CAACW,UAJX,CADF;AAQD,KATM,MASA;AACL;AACD;AACF,GAhBD;;AAqBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACiB;AACb,IAAA,KAAK,EAAEtB,KADM;AAEb,IAAA,QAAQ,EAAEuB,CAAC,IAAItB,QAAQ,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,OAAJ,CALF,CADF;AAWD,CAnDD;;AAoDA,eAAenB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [query, setQuery] = useState('')\n\n  useEffect(() => {\n    axios\n      .get('https://restcountries.com/v3.1/all')\n      .then(response => {\n        setCountries(response.data)\n      })\n  }, [])\n  console.log(countries)\n\n  const filteredCountries = query.trim()\n    ? countries.filter(country =>\n      country.name.common.toLowerCase()\n        .includes(query.trim().toLowerCase()))\n    : []\n\n  const outcome = () => {\n    if (filteredCountries.length < 10) {\n      filteredCountries.map((country, countryIndex) =>\n        <li key={`country_${countryIndex}`}>{country.name.common}</li>)\n    } else if (filteredCountries.length === 1) {\n      filteredCountries.map((country, countryIndex) =>\n        <li key={`country_${countryIndex}`}>\n          {country.name.common},\n          {country.languages},\n          {country.flags},\n          {country.currencies}\n        </li>\n      )\n    } else {\n      'Too many matches, specify another filter'\n    }\n  }\n\n\n\n\n  return (\n    <div>\n      find countries <input\n        value={query}\n        onChange={e => setQuery(e.target.value)} />\n\n      <p>{outcome}</p>\n\n    </div>\n\n  )\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}