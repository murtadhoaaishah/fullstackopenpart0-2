{"ast":null,"code":"var _jsxFileName = \"/Users/murtadhoaaishah/Desktop/workspace/fs-open/part2/countries/src/App.jsx\";\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'\n// const App = () => {\n//   const [countries, setCountries] = useState([])\n//   const [query, setQuery] = useState('')\n//   const [show, setShow] = useState({ view: false, country: {} })\n//   useEffect(() => {\n//     axios\n//       .get('https://restcountries.com/v3.1/all')\n//       .then(response => {\n//         setCountries(response.data)\n//       })\n//   }, [])\n//   console.log(countries)\n//   const filteredCountries = query.trim()\n//     ? countries.filter(country =>\n//       country.name.common.toLowerCase()\n//         .includes(query.trim().toLowerCase()))\n//     : []\n//   const output = filteredCountries.length === 1\n//     ? filteredCountries.map((country, countryIndex) => <div key={`country_${countryIndex}`}>\n//       <h1>{country.name.common}</h1>\n//       <p>capital : {country.capital}</p>\n//       <p>area: {country.area}</p>\n//       <h3>languages: {Object.entries(country.languages).map((language, languageIndex) => <li key={`language_${languageIndex}`}>{language}</li>\n//       )}</h3>\n//       <img src={country.flag.png} alt={country.name.common} />\n//     </div>)\n//     : filteredCountries.length < 10\n//       ?\n//       filteredCountries.map((country, countryIndex) => <div key={`country_${countryIndex}`}> <p>{country.name.common} <button onClick={() => setShow({ ...show, view: !show.view, country })}>show</button></p></div>)\n//       : <p>\n//         Too many matches, try another filter'\n//       </p>\n//   console.log(show)\n//   return (\n//     <div>\n//       find countries <input\n//         value={query}\n//         onChange={e => setQuery(e.target.value)} />\n//       {show.view ? <div>\n//         <h1>{show.country.name.common}</h1>\n//         <p>capital : {show.country.capital}</p>\n//         <p>area: {show.country.area}</p>\n//         <h3>languages: {Object.entries(show.country.languages).map((language, languageIndex) => <li key={`language_${languageIndex}`}>{language[1]}</li>\n//         )}</h3>\n//         <img src={show.country.flag.png} alt={show.country.name.common} />\n//       </div> : output}\n//     </div>\n//   )\n// }\n// export default App\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [countries, setCountries] = useState([]);\n  const [show, setShow] = useState({\n    display: false,\n    country: {}\n  });\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all').then(response => {\n      setCountries(response.data);\n    });\n  }, []);\n  console.log(countries);\n  const filteredCountries = query.trim() ? countries.filter(country => country.name.common.toLowerCase().includes(query.trim().toLowerCase())) : [];\n  const output = filteredCountries.length === 1 ? filteredCountries.map((country, countryIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: `country_${countryIndex}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, country.name.common), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"capital \", country.capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"area \", country.area), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, Object.entries(country.languages).map((language, languageIndex) => /*#__PURE__*/React.createElement(\"li\", {\n    key: `language_${languageIndex}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, language[1]))), /*#__PURE__*/React.createElement(\"img\", {\n    src: country.flags.png,\n    alt: country.name.common,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }))) : filteredCountries.length < 10 ? filteredCountries.map((country, countryIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 63\n    }\n  }, country.name.common), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShow({ ...show,\n      display: !show.display,\n      country\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 93\n    }\n  }, \"show\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Too many matches, specify another filter\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, \"find countries  \", /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/murtadhoaaishah/Desktop/workspace/fs-open/part2/countries/src/App.jsx"],"names":["React","useState","useEffect","axios","App","query","setQuery","countries","setCountries","show","setShow","display","country","get","then","response","data","console","log","filteredCountries","trim","filter","name","common","toLowerCase","includes","output","length","map","countryIndex","capital","area","Object","entries","languages","language","languageIndex","flags","png","e","target","value"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'\n\n// const App = () => {\n//   const [countries, setCountries] = useState([])\n//   const [query, setQuery] = useState('')\n//   const [show, setShow] = useState({ view: false, country: {} })\n\n\n//   useEffect(() => {\n//     axios\n//       .get('https://restcountries.com/v3.1/all')\n//       .then(response => {\n//         setCountries(response.data)\n//       })\n//   }, [])\n//   console.log(countries)\n\n//   const filteredCountries = query.trim()\n//     ? countries.filter(country =>\n//       country.name.common.toLowerCase()\n//         .includes(query.trim().toLowerCase()))\n//     : []\n\n//   const output = filteredCountries.length === 1\n//     ? filteredCountries.map((country, countryIndex) => <div key={`country_${countryIndex}`}>\n//       <h1>{country.name.common}</h1>\n//       <p>capital : {country.capital}</p>\n//       <p>area: {country.area}</p>\n//       <h3>languages: {Object.entries(country.languages).map((language, languageIndex) => <li key={`language_${languageIndex}`}>{language}</li>\n//       )}</h3>\n//       <img src={country.flag.png} alt={country.name.common} />\n//     </div>)\n//     : filteredCountries.length < 10\n//       ?\n//       filteredCountries.map((country, countryIndex) => <div key={`country_${countryIndex}`}> <p>{country.name.common} <button onClick={() => setShow({ ...show, view: !show.view, country })}>show</button></p></div>)\n//       : <p>\n//         Too many matches, try another filter'\n//       </p>\n\n\n\n//   console.log(show)\n\n\n//   return (\n//     <div>\n//       find countries <input\n//         value={query}\n//         onChange={e => setQuery(e.target.value)} />\n//       {show.view ? <div>\n//         <h1>{show.country.name.common}</h1>\n//         <p>capital : {show.country.capital}</p>\n//         <p>area: {show.country.area}</p>\n//         <h3>languages: {Object.entries(show.country.languages).map((language, languageIndex) => <li key={`language_${languageIndex}`}>{language[1]}</li>\n//         )}</h3>\n//         <img src={show.country.flag.png} alt={show.country.name.common} />\n//       </div> : output}\n//     </div>\n\n//   )\n// }\n// export default App\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst App = () => {\n  const [query, setQuery] = useState('')\n  const [countries, setCountries] = useState([])\n  const [show, setShow] = useState({ display: false, country: {} })\n\n\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all')\n      .then(response => {\n        setCountries(response.data)\n      })\n  }, [])\n  console.log(countries);\n\n\n  const filteredCountries = query.trim()\n    ? countries.filter(country => country.name.common.toLowerCase()\n      .includes(query.trim().toLowerCase()))\n    : []\n\n\n  const output = filteredCountries.length === 1\n    ? filteredCountries.map((country, countryIndex) =>\n      <div key={`country_${countryIndex}`}>\n        <h1>{country.name.common}</h1>\n        <p>capital {country.capital}</p>\n        <p>area {country.area}</p>\n        <h3>{Object.entries(country.languages).map((language, languageIndex) =>\n          <li key={`language_${languageIndex}`}>{language[1]}</li>\n        )}</h3>\n        <img src={country.flags.png} alt={country.name.common} />\n      </div>)\n    : filteredCountries.length < 10\n      ? filteredCountries.map((country, countryIndex) => <div><li>{country.name.common}</li><button onClick={() => setShow({ ...show, display: !show.display, country })}>show</button></div>)\n      : <p>Too many matches, specify another filter</p>\n\n\n  return (\n    <div>\n      find countries  <input value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      {\n      }\n    </div>\n\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}