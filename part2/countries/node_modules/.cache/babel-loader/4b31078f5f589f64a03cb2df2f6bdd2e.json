{"ast":null,"code":"var _jsxFileName = \"/Users/murtadhoaaishah/Desktop/workspace/fs-open/part2/countries/src/App.jsx\";\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'\n// const App = () => {\n//   const [countries, setCountries] = useState([])\n//   const [query, setQuery] = useState('')\n//   const [show, setShow] = useState({ view: false, country: {} })\n//   useEffect(() => {\n//     axios\n//       .get('https://restcountries.com/v3.1/all')\n//       .then(response => {\n//         setCountries(response.data)\n//       })\n//   }, [])\n//   console.log(countries)\n//   const filteredCountries = query.trim()\n//     ? countries.filter(country =>\n//       country.name.common.toLowerCase()\n//         .includes(query.trim().toLowerCase()))\n//     : []\n//   const output = filteredCountries.length === 1\n//     ? filteredCountries.map((country, countryIndex) => <div key={`country_${countryIndex}`}>\n//       <h1>{country.name.common}</h1>\n//       <p>capital : {country.capital}</p>\n//       <p>area: {country.area}</p>\n//       <h3>languages: {Object.entries(country.languages).map((language, languageIndex) => <li key={`language_${languageIndex}`}>{language}</li>\n//       )}</h3>\n//       <img src={country.flag.png} alt={country.name.common} />\n//     </div>)\n//     : filteredCountries.length < 10\n//       ?\n//       filteredCountries.map((country, countryIndex) => <div key={`country_${countryIndex}`}> <p>{country.name.common} <button onClick={() => setShow({ ...show, view: !show.view, country })}>show</button></p></div>)\n//       : <p>\n//         Too many matches, try another filter'\n//       </p>\n//   console.log(show)\n//   return (\n//     <div>\n//       find countries <input\n//         value={query}\n//         onChange={e => setQuery(e.target.value)} />\n//       {show.view ? <div>\n//         <h1>{show.country.name.common}</h1>\n//         <p>capital : {show.country.capital}</p>\n//         <p>area: {show.country.area}</p>\n//         <h3>languages: {Object.entries(show.country.languages).map((language, languageIndex) => <li key={`language_${languageIndex}`}>{language[1]}</li>\n//         )}</h3>\n//         <img src={show.country.flag.png} alt={show.country.name.common} />\n//       </div> : output}\n//     </div>\n//   )\n// }\n// export default App\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [countries, setCountries] = useState([]);\n  const [show, setShow] = useState({\n    display: false,\n    country: {}\n  });\n  const [weather, setWeather] = useState('');\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all').then(response => {\n      setCountries(response.data);\n    });\n  }, []); // console.log(countries);\n\n  const api_key = process.env.REACT_APP_API_KEY; // console.log(api_key)\n  // console.log(weather)\n  // console.log(query)\n  //a4c7660005ab48ae0cc3802440d15423\n  //REACT_APP_API_KEY='489d87d30f660d1275056a5bd92b5664' npm start\n\n  const fetchWeather = country => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${country.name.common}&appid=${api_key}`).then(response => {\n      setWeather(response.data);\n      console.log(response.data);\n    });\n  };\n\n  console.log({\n    weather\n  });\n  const filteredCountries = query.trim() ? countries.filter(country => country.name.common.toLowerCase().includes(query.trim().toLowerCase())) : countries;\n  useEffect(() => {\n    if (filteredCountries.length === 1) {\n      console.log({\n        single: countries[0]\n      });\n      fetchWeather(countries[0]);\n    }\n\n    return;\n  }, [query]);\n  const output = filteredCountries.length === 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, filteredCountries[0].name.common), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, \"capital \", filteredCountries[0].capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, \"area \", filteredCountries[0].area), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, Object.entries(filteredCountries[0].languages).map((language, languageIndex) => /*#__PURE__*/React.createElement(\"li\", {\n    key: `language_${languageIndex}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, language[1]))), /*#__PURE__*/React.createElement(\"img\", {\n    src: filteredCountries[0].flags.png,\n    alt: filteredCountries[0].name.common,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, \"Weather in \", filteredCountries[0].name.common), weather && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, \"temperature -\", weather.main.temp), /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"wind \", weather.wind.speed, \" m/s\"))) : filteredCountries.length < 10 ? filteredCountries.map((country, countryIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: `show_key${country.name.common}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 58\n    }\n  }, country.name.common, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setShow({ ...show,\n        display: !show.display,\n        country\n      });\n      fetchWeather(country);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 123\n    }\n  }, \"show\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \"Too many matches, specify another filter\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, \"find countries  \", /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }\n  }), show.display ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, show.country.name.common), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, \"capital \", show.country.capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, \"area \", show.country.area), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, Object.entries(show.country.languages).map((language, languageIndex) => /*#__PURE__*/React.createElement(\"li\", {\n    key: `language_${languageIndex}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, language[1]))), /*#__PURE__*/React.createElement(\"img\", {\n    src: show.country.flags.png,\n    alt: show.country.name.common,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }), weather && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 27\n    }\n  }, \"temperature -\", weather.main.temp), /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, \"wind \", weather.wind.speed, \" m/s\"))) : output);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/murtadhoaaishah/Desktop/workspace/fs-open/part2/countries/src/App.jsx"],"names":["React","useState","useEffect","axios","App","query","setQuery","countries","setCountries","show","setShow","display","country","weather","setWeather","get","then","response","data","api_key","process","env","REACT_APP_API_KEY","fetchWeather","name","common","console","log","filteredCountries","trim","filter","toLowerCase","includes","length","single","output","capital","area","Object","entries","languages","map","language","languageIndex","flags","png","main","temp","icon","wind","speed","countryIndex","e","target","value"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'\n\n// const App = () => {\n//   const [countries, setCountries] = useState([])\n//   const [query, setQuery] = useState('')\n//   const [show, setShow] = useState({ view: false, country: {} })\n\n\n//   useEffect(() => {\n//     axios\n//       .get('https://restcountries.com/v3.1/all')\n//       .then(response => {\n//         setCountries(response.data)\n//       })\n//   }, [])\n//   console.log(countries)\n\n//   const filteredCountries = query.trim()\n//     ? countries.filter(country =>\n//       country.name.common.toLowerCase()\n//         .includes(query.trim().toLowerCase()))\n//     : []\n\n//   const output = filteredCountries.length === 1\n//     ? filteredCountries.map((country, countryIndex) => <div key={`country_${countryIndex}`}>\n//       <h1>{country.name.common}</h1>\n//       <p>capital : {country.capital}</p>\n//       <p>area: {country.area}</p>\n//       <h3>languages: {Object.entries(country.languages).map((language, languageIndex) => <li key={`language_${languageIndex}`}>{language}</li>\n//       )}</h3>\n//       <img src={country.flag.png} alt={country.name.common} />\n//     </div>)\n//     : filteredCountries.length < 10\n//       ?\n//       filteredCountries.map((country, countryIndex) => <div key={`country_${countryIndex}`}> <p>{country.name.common} <button onClick={() => setShow({ ...show, view: !show.view, country })}>show</button></p></div>)\n//       : <p>\n//         Too many matches, try another filter'\n//       </p>\n\n\n\n//   console.log(show)\n\n\n//   return (\n//     <div>\n//       find countries <input\n//         value={query}\n//         onChange={e => setQuery(e.target.value)} />\n//       {show.view ? <div>\n//         <h1>{show.country.name.common}</h1>\n//         <p>capital : {show.country.capital}</p>\n//         <p>area: {show.country.area}</p>\n//         <h3>languages: {Object.entries(show.country.languages).map((language, languageIndex) => <li key={`language_${languageIndex}`}>{language[1]}</li>\n//         )}</h3>\n//         <img src={show.country.flag.png} alt={show.country.name.common} />\n//       </div> : output}\n//     </div>\n\n//   )\n// }\n// export default App\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst App = () => {\n  const [query, setQuery] = useState('')\n  const [countries, setCountries] = useState([])\n  const [show, setShow] = useState({ display: false, country: {} })\n  const [weather, setWeather] = useState('')\n\n\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all')\n      .then(response => {\n        setCountries(response.data)\n      })\n  }, [])\n  // console.log(countries);\n\n  const api_key = process.env.REACT_APP_API_KEY\n  // console.log(api_key)\n\n  // console.log(weather)\n  // console.log(query)\n  //a4c7660005ab48ae0cc3802440d15423\n  //REACT_APP_API_KEY='489d87d30f660d1275056a5bd92b5664' npm start\n\n  const fetchWeather = (country) => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${country.name.common}&appid=${api_key}`)\n      .then(response => {\n        setWeather(response.data)\n        console.log(response.data)\n      })\n  }\n\n\n\n\n  console.log({ weather });\n\n  const filteredCountries = query.trim()\n    ? countries.filter(country => country.name.common.toLowerCase()\n      .includes(query.trim().toLowerCase()))\n    : countries\n\n  useEffect(() => {\n    if (filteredCountries.length === 1) {\n      console.log({ single: countries[0] })\n      fetchWeather(countries[0])\n    }\n    return\n  }, [query])\n\n\n\n\n  const output = filteredCountries.length === 1\n    ? (<div>\n      <h1>{filteredCountries[0].name.common}</h1>\n      <p>capital {filteredCountries[0].capital}</p>\n      <p>area {filteredCountries[0].area}</p>\n      <h3>{Object.entries(filteredCountries[0].languages).map((language, languageIndex) =>\n        <li key={`language_${languageIndex}`}>{language[1]}</li>\n      )}</h3>\n      <img src={filteredCountries[0].flags.png} alt={filteredCountries[0].name.common} />\n      <h1>Weather in {filteredCountries[0].name.common}</h1>\n      {weather && <div> <p>temperature -{weather.main.temp}</p>\n        <img src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} />\n        <p>wind {weather.wind.speed} m/s</p>\n      </div>}\n    </div>)\n    : filteredCountries.length < 10\n      ? filteredCountries.map((country, countryIndex) => <div key={`show_key${country.name.common}`}>{country.name.common}<button onClick={() => { setShow({ ...show, display: !show.display, country }); fetchWeather(country) }}>show</button></div>)\n      : <p>Too many matches, specify another filter</p>\n\n\n  return (\n    <div>\n      find countries  <input value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      {show.display ? <div>\n        <h1>{show.country.name.common}</h1>\n        <p>capital {show.country.capital}</p>\n        <p>area {show.country.area}</p>\n        <h3>{Object.entries(show.country.languages).map((language, languageIndex) =>\n          <li key={`language_${languageIndex}`}>{language[1]}</li>\n        )}</h3>\n        <img src={show.country.flags.png} alt={show.country.name.common} />\n        {weather && <div> <p>temperature -{weather.main.temp}</p>\n          <img src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} />\n          <p>wind {weather.wind.speed} m/s</p>\n        </div>}\n      </div>\n        : output\n      }\n    </div>\n\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}