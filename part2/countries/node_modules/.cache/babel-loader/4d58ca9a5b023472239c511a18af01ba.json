{"ast":null,"code":"var _jsxFileName = \"/Users/murtadhoaaishah/Desktop/workspace/fs-open/part2/countries/src/App.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [query, setQuery] = useState('');\n  const [show, setShow] = useState({\n    display: false,\n    country: {}\n  });\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all').then(response => {\n      // console.log(response);\n      setCountries(response.data);\n    });\n  }, []);\n  console.log(countries);\n  const filteredCountries = query.trim() ? countries.filter(country => country.name.common.toLowerCase().includes(query.trim().toLowerCase())) : [];\n  const output = filteredCountries.length === 1 ? filteredCountries.map((country, countryIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: `country_${countryIndex}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, country.name.common), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"capital \", country.capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"area \", country.area), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"languages: \", Object.entries(country.languages).map((languages, languageIndex) => /*#__PURE__*/React.createElement(\"li\", {\n    key: `language_${languageIndex}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, languages[1]))), /*#__PURE__*/React.createElement(\"img\", {\n    src: country.flags.png,\n    alt: country.name.common,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }))) : filteredCountries.length < 10 ? filteredCountries.map((country, countryIndex) => /*#__PURE__*/React.createElement(\"li\", {\n    key: `country_${countryIndex}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, country.name.common, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShow({ ...show,\n      display: !show.display,\n      country\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 66\n    }\n  }, \"show\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Too many matches, specify another filter\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }\n  }), show.display ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, show.country.name.common), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"capital \", show.country.capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"area \", show.country.area), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"languages: \", Object.entries(show.country.languages).map((languages, languageIndex) => /*#__PURE__*/React.createElement(\"li\", {\n    key: `language_${languageIndex}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, languages[1]))), /*#__PURE__*/React.createElement(\"img\", {\n    src: show.country.flags.png,\n    alt: show.country.name.common,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })) : output);\n};\n\nexport default App;\n{\n  /* \n     import React, {useState, useEffect} from 'react'\n     import axios from 'axios'\n      const App = () =>\n     {\n         const [query, setQuery] = useState('')\n         const [countries, setCountries] = useState([])\n         const [show, setShow] = useState({ display: false, country: {} })\n         const [weather, setWeather] = useState('')\n  \n         useEffect(() => {\n           axios.get('https://restcountries.com/v3.1/all')     \n             .then(response => {\n               setCountries(response.data)\n             })\n         }, []) */\n}\n{\n  /* console.log(countries);`  \n          const api_key = process.env.REACT_APP_API_KEY\n          console.log(api_key)\n          console.log(weather)\n          console.log(query)\n         a4c7660005ab48ae0cc3802440d15423\n         REACT_APP_API_KEY='489d87d30f660d1275056a5bd92b5664' npm start */\n}\n{\n  /* const fetchWeather = (country) => {\n           axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${country.name.common}&appid=${api_key}`)\n             .then(response => {\n               setWeather(response.data)\n             })\n         }\n  \n  \n         console.log({ weather });\n          const filteredCountries = query.trim()\n           ? countries.filter(country => country.name.common.toLowerCase()\n             .includes(query.trim().toLowerCase()))\n           : countries\n          useEffect(() => {\n           if (filteredCountries.length === 1) {\n             fetchWeather(filteredCountries[0])\n           }\n         }, [query])\n  \n  \n         const output = filteredCountries.length === 1\n           ? (<div>\n             <h1>{filteredCountries[0].name.common}</h1>\n             <p>capital {filteredCountries[0].capital}</p>\n             <p>area {filteredCountries[0].area}</p>\n             <h3>{Object.entries(filteredCountries[0].languages).map((language, languageIndex) =>\n               <li key={`language_${languageIndex}`}>{language[1]}</li>\n             )}</h3>\n             <img src={filteredCountries[0].flags.png} alt={filteredCountries[0].name.common} />\n             <h1>Weather in {filteredCountries[0].name.common}</h1>\n             {weather && <div> <p>temperature -{weather.main.temp}</p>\n               <img src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} />\n               <p>wind {weather.wind.speed} m/s</p>\n             </div>}\n           </div>)\n           : filteredCountries.length < 10\n             ? filteredCountries.map((country, countryIndex) => <div key={`show_key${country.name.common}`}>{country.name.common}<button onClick={() => \n       { setShow({ ...show, display: !show.display, country }); fetchWeather(country) }}>show</button></div >)\n       : <p>Too many matches, specify another filter</p>\n  \n   return (\n     <div>\n       find countries  <input value={query}\n         onChange={e => setQuery(e.target.value)}\n       />\n       {show.display ? <div>\n         <h1>{show.country.name.common}</h1>\n         <p>capital {show.country.capital}</p>\n         <p>area {show.country.area}</p>\n         <h3>{Object.entries(show.country.languages).map((language, languageIndex) =>\n           <li key={`language_${languageIndex}`}>{language[1]}</li>\n         )}</h3>\n         <img src={show.country.flags.png} alt={show.country.name.common} />\n         {weather && <div> <p>temperature -{weather.main.temp}</p>\n           <img src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} />\n           <p>wind {weather.wind.speed} m/s</p>\n         </div>}\n       </div>\n         : output\n       }\n     </div>\n    )\n  }\n  export default App */\n}","map":{"version":3,"sources":["/Users/murtadhoaaishah/Desktop/workspace/fs-open/part2/countries/src/App.jsx"],"names":["React","useState","useEffect","axios","App","countries","setCountries","query","setQuery","show","setShow","display","country","get","then","response","data","console","log","filteredCountries","trim","filter","name","common","toLowerCase","includes","output","length","map","countryIndex","capital","area","Object","entries","languages","languageIndex","flags","png","e","target","value"],"mappings":"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AAAA;AAAA,iBAAYd,IAAI,CAACG,OAAL,CAAakB,OAAzB,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAASrB,IAAI,CAACG,OAAL,CAAamB,IAAtB,CAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcC,MAAM,CAACC,OAAP,CAAexB,IAAI,CAACG,OAAL,CAAasB,SAA5B,EACTN,GADS,CACL,CAACM,SAAD,EAAYC,aAAZ,kBACH;AAAI,IAAA,GAAG,EAAG,YAAWA,aAAc,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCD,SAAS,CAAC,CAAD,CAAhD,CAFQ,CADd,CAJA,eASA;AAAK,IAAA,GAAG,EAAEzB,IAAI,CAACG,OAAL,CAAawB,KAAb,CAAmBC,GAA7B;AAAkC,IAAA,GAAG,EAAE5B,IAAI,CAACG,OAAL,CAAaU,IAAb,CAAkBC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATA,CADH,GAaGG,MAjBN,CADF;AAqBD,CAjED;;AAmEA,eAAetB,GAAf;AAwBA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEkB;AAClB;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AAE0E;AAE1E;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQsB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [query, setQuery] = useState('')\n  const [show, setShow] = useState({ display: false, country: {} })\n\n\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all')\n      .then(response => {\n        // console.log(response);\n        setCountries(response.data)\n      })\n  }, [])\n  console.log(countries);\n\n  const filteredCountries = query.trim()\n    ? countries.filter(country => country.name.common.toLowerCase()\n      .includes(query.trim().toLowerCase()))\n    : []\n\n\n  const output = filteredCountries.length === 1\n    ? filteredCountries.map((country, countryIndex) =>\n      <div key={`country_${countryIndex}`}>\n        <h1>{country.name.common}</h1>\n        <p>capital {country.capital}</p>\n        <p>area {country.area}</p>\n        <h3>\n          languages: {Object.entries(country.languages)\n            .map((languages, languageIndex) =>\n              <li key={`language_${languageIndex}`}>{languages[1]}</li>)}\n        </h3>\n        <img src={country.flags.png} alt={country.name.common} />\n      </div>)\n\n    : filteredCountries.length < 10\n      ? filteredCountries.map((country, countryIndex) =>\n        <li key={`country_${countryIndex}`}>{country.name.common}<button\n          onClick={() => setShow({ ...show, display: !show.display, country })}>show</button></li>\n      )\n      : <p>Too many matches, specify another filter</p>\n\n\n\n  return (\n    <div>\n      find countries <input value={query}\n        onChange={e => setQuery(e.target.value)} />\n\n      {show.display\n        ? <div>\n          <h1>{show.country.name.common}</h1>\n          <p>capital {show.country.capital}</p>\n          <p>area {show.country.area}</p>\n          <h3>\n            languages: {Object.entries(show.country.languages)\n              .map((languages, languageIndex) =>\n                <li key={`language_${languageIndex}`}>{languages[1]}</li>)}\n          </h3>\n          <img src={show.country.flags.png} alt={show.country.name.common} />\n        </div>\n\n        : output}\n    </div>\n  )\n}\n\nexport default App\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{/* \n    import React, {useState, useEffect} from 'react'\n    import axios from 'axios'\n\n    const App = () =>\n    {\n        const [query, setQuery] = useState('')\n        const [countries, setCountries] = useState([])\n        const [show, setShow] = useState({ display: false, country: {} })\n        const [weather, setWeather] = useState('')\n\n\n        useEffect(() => {\n          axios.get('https://restcountries.com/v3.1/all')     \n            .then(response => {\n              setCountries(response.data)\n            })\n        }, []) */}\n{/* console.log(countries);`  \n\n        const api_key = process.env.REACT_APP_API_KEY\n         console.log(api_key)\n\n        console.log(weather)\n         console.log(query)\n        a4c7660005ab48ae0cc3802440d15423\n        REACT_APP_API_KEY='489d87d30f660d1275056a5bd92b5664' npm start */}\n\n{/* const fetchWeather = (country) => {\n          axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${country.name.common}&appid=${api_key}`)\n            .then(response => {\n              setWeather(response.data)\n            })\n        }\n\n\n\n\n        console.log({ weather });\n\n        const filteredCountries = query.trim()\n          ? countries.filter(country => country.name.common.toLowerCase()\n            .includes(query.trim().toLowerCase()))\n          : countries\n\n        useEffect(() => {\n          if (filteredCountries.length === 1) {\n            fetchWeather(filteredCountries[0])\n          }\n        }, [query])\n\n\n\n\n        const output = filteredCountries.length === 1\n          ? (<div>\n            <h1>{filteredCountries[0].name.common}</h1>\n            <p>capital {filteredCountries[0].capital}</p>\n            <p>area {filteredCountries[0].area}</p>\n            <h3>{Object.entries(filteredCountries[0].languages).map((language, languageIndex) =>\n              <li key={`language_${languageIndex}`}>{language[1]}</li>\n            )}</h3>\n            <img src={filteredCountries[0].flags.png} alt={filteredCountries[0].name.common} />\n            <h1>Weather in {filteredCountries[0].name.common}</h1>\n            {weather && <div> <p>temperature -{weather.main.temp}</p>\n              <img src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} />\n              <p>wind {weather.wind.speed} m/s</p>\n            </div>}\n          </div>)\n          : filteredCountries.length < 10\n            ? filteredCountries.map((country, countryIndex) => <div key={`show_key${country.name.common}`}>{country.name.common}<button onClick={() => \n      { setShow({ ...show, display: !show.display, country }); fetchWeather(country) }}>show</button></div >)\n      : <p>Too many matches, specify another filter</p>\n\n\n  return (\n    <div>\n      find countries  <input value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      {show.display ? <div>\n        <h1>{show.country.name.common}</h1>\n        <p>capital {show.country.capital}</p>\n        <p>area {show.country.area}</p>\n        <h3>{Object.entries(show.country.languages).map((language, languageIndex) =>\n          <li key={`language_${languageIndex}`}>{language[1]}</li>\n        )}</h3>\n        <img src={show.country.flags.png} alt={show.country.name.common} />\n        {weather && <div> <p>temperature -{weather.main.temp}</p>\n          <img src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} />\n          <p>wind {weather.wind.speed} m/s</p>\n        </div>}\n      </div>\n        : output\n      }\n    </div>\n\n  )\n}\nexport default App */}"]},"metadata":{},"sourceType":"module"}