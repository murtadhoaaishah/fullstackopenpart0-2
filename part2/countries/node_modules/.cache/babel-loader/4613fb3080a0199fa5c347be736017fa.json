{"ast":null,"code":"var _jsxFileName = \"/Users/murtadhoaaishah/Desktop/workspace/fs-open/part2/countries/src/App.jsx\";\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'\n// const App = () => {\n//   const [countries, setCountries] = useState([])\n//   const [query, setQuery] = useState('')\n//   const [show, setShow] = useState({ view: false, country: {} })\n//   useEffect(() => {\n//     axios\n//       .get('https://restcountries.com/v3.1/all')\n//       .then(response => {\n//         setCountries(response.data)\n//       })\n//   }, [])\n//   console.log(countries)\n//   const filteredCountries = query.trim()\n//     ? countries.filter(country =>\n//       country.name.common.toLowerCase()\n//         .includes(query.trim().toLowerCase()))\n//     : []\n//   const output = filteredCountries.length === 1\n//     ? filteredCountries.map((country, countryIndex) => <div key={`country_${countryIndex}`}>\n//       <h1>{country.name.common}</h1>\n//       <p>capital : {country.capital}</p>\n//       <p>area: {country.area}</p>\n//       <h3>languages: {Object.entries(country.languages).map((language, languageIndex) => <li key={`language_${languageIndex}`}>{language}</li>\n//       )}</h3>\n//       <img src={country.flag.png} alt={country.name.common} />\n//     </div>)\n//     : filteredCountries.length < 10\n//       ?\n//       filteredCountries.map((country, countryIndex) => <div key={`country_${countryIndex}`}> <p>{country.name.common} <button onClick={() => setShow({ ...show, view: !show.view, country })}>show</button></p></div>)\n//       : <p>\n//         Too many matches, try another filter'\n//       </p>\n//   console.log(show)\n//   return (\n//     <div>\n//       find countries <input\n//         value={query}\n//         onChange={e => setQuery(e.target.value)} />\n//       {show.view ? <div>\n//         <h1>{show.country.name.common}</h1>\n//         <p>capital : {show.country.capital}</p>\n//         <p>area: {show.country.area}</p>\n//         <h3>languages: {Object.entries(show.country.languages).map((language, languageIndex) => <li key={`language_${languageIndex}`}>{language[1]}</li>\n//         )}</h3>\n//         <img src={show.country.flag.png} alt={show.country.name.common} />\n//       </div> : output}\n//     </div>\n//   )\n// }\n// export default App\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [countries, setCountries] = useState([]);\n  const [show, setShow] = useState({\n    display: false,\n    country: {}\n  });\n  const [weatherName, setWeatherName] = useState('');\n  const [weather, setWeather] = useState([]);\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all').then(response => {\n      setCountries(response.data);\n    });\n  }, []); // console.log(countries);\n\n  const api_key = process.env.REACT_APP_API_KEY; // console.log(api_key)\n  // console.log(weather)\n\n  console.log(query); //REACT_APP_API_KEY='489d87d30f660d1275056a5bd92b5664' npm start\n\n  const fetchWeather = async () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/?q=${weatherName}&appid=${api_key}`).then(response => {\n      setWeather(response.data);\n    });\n  };\n\n  useEffect(() => {}, []);\n  console.log(weather);\n  const filteredCountries = query.trim() ? countries.filter(country => country.name.common.toLowerCase().includes(query.trim().toLowerCase())) : [];\n  const output = filteredCountries.length === 1 ? filteredCountries.map((country, countryIndex) => {\n    {\n      country.name ? setWeatherName(country.name.common) : null;\n    }\n\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      key: `country_${countryIndex}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, country.name.common), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, \"capital \", country.capital), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, \"area \", country.area), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, Object.entries(country.languages).map((language, languageIndex) => /*#__PURE__*/React.createElement(\"li\", {\n      key: `language_${languageIndex}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, language[1]))), /*#__PURE__*/React.createElement(\"img\", {\n      src: country.flags.png,\n      alt: country.name.common,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, \"Weather in \", country.name.common));\n  }) : filteredCountries.length < 10 ? filteredCountries.map((country, countryIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 58\n    }\n  }, country.name.common, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShow({ ...show,\n      display: !show.display,\n      country\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 84\n    }\n  }, \"show\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, \"Too many matches, specify another filter\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, \"find countries  \", /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 23\n    }\n  }), show.display ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, show.country.name.common), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \"capital \", show.country.capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"area \", show.country.area), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, Object.entries(show.country.languages).map((language, languageIndex) => /*#__PURE__*/React.createElement(\"li\", {\n    key: `language_${languageIndex}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, language[1]))), /*#__PURE__*/React.createElement(\"img\", {\n    src: show.country.flags.png,\n    alt: show.country.name.common,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  })) : output);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/murtadhoaaishah/Desktop/workspace/fs-open/part2/countries/src/App.jsx"],"names":["React","useState","useEffect","axios","App","query","setQuery","countries","setCountries","show","setShow","display","country","weatherName","setWeatherName","weather","setWeather","get","then","response","data","api_key","process","env","REACT_APP_API_KEY","console","log","fetchWeather","filteredCountries","trim","filter","name","common","toLowerCase","includes","output","length","map","countryIndex","capital","area","Object","entries","languages","language","languageIndex","flags","png","e","target","value"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios'\n\n// const App = () => {\n//   const [countries, setCountries] = useState([])\n//   const [query, setQuery] = useState('')\n//   const [show, setShow] = useState({ view: false, country: {} })\n\n\n//   useEffect(() => {\n//     axios\n//       .get('https://restcountries.com/v3.1/all')\n//       .then(response => {\n//         setCountries(response.data)\n//       })\n//   }, [])\n//   console.log(countries)\n\n//   const filteredCountries = query.trim()\n//     ? countries.filter(country =>\n//       country.name.common.toLowerCase()\n//         .includes(query.trim().toLowerCase()))\n//     : []\n\n//   const output = filteredCountries.length === 1\n//     ? filteredCountries.map((country, countryIndex) => <div key={`country_${countryIndex}`}>\n//       <h1>{country.name.common}</h1>\n//       <p>capital : {country.capital}</p>\n//       <p>area: {country.area}</p>\n//       <h3>languages: {Object.entries(country.languages).map((language, languageIndex) => <li key={`language_${languageIndex}`}>{language}</li>\n//       )}</h3>\n//       <img src={country.flag.png} alt={country.name.common} />\n//     </div>)\n//     : filteredCountries.length < 10\n//       ?\n//       filteredCountries.map((country, countryIndex) => <div key={`country_${countryIndex}`}> <p>{country.name.common} <button onClick={() => setShow({ ...show, view: !show.view, country })}>show</button></p></div>)\n//       : <p>\n//         Too many matches, try another filter'\n//       </p>\n\n\n\n//   console.log(show)\n\n\n//   return (\n//     <div>\n//       find countries <input\n//         value={query}\n//         onChange={e => setQuery(e.target.value)} />\n//       {show.view ? <div>\n//         <h1>{show.country.name.common}</h1>\n//         <p>capital : {show.country.capital}</p>\n//         <p>area: {show.country.area}</p>\n//         <h3>languages: {Object.entries(show.country.languages).map((language, languageIndex) => <li key={`language_${languageIndex}`}>{language[1]}</li>\n//         )}</h3>\n//         <img src={show.country.flag.png} alt={show.country.name.common} />\n//       </div> : output}\n//     </div>\n\n//   )\n// }\n// export default App\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst App = () => {\n  const [query, setQuery] = useState('')\n  const [countries, setCountries] = useState([])\n  const [show, setShow] = useState({ display: false, country: {} })\n  const [weatherName, setWeatherName] = useState('')\n  const [weather, setWeather] = useState([])\n\n\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all')\n      .then(response => {\n        setCountries(response.data)\n      })\n  }, [])\n  // console.log(countries);\n\n  const api_key = process.env.REACT_APP_API_KEY\n  // console.log(api_key)\n\n  // console.log(weather)\n  console.log(query)\n\n  //REACT_APP_API_KEY='489d87d30f660d1275056a5bd92b5664' npm start\n\n  const fetchWeather = async () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/?q=${weatherName}&appid=${api_key}`)\n      .then(response => {\n        setWeather(response.data)\n      })\n  }\n\n\n  useEffect(() => {\n  }, [])\n\n\n  console.log(weather);\n\n  const filteredCountries = query.trim()\n    ? countries.filter(country => country.name.common.toLowerCase()\n      .includes(query.trim().toLowerCase()))\n    : []\n\n\n  const output = filteredCountries.length === 1\n    ? filteredCountries.map((country, countryIndex) => {\n      { country.name ? setWeatherName(country.name.common) : null } (\n        <div key={`country_${countryIndex}`}>\n          <h1>{country.name.common}</h1>\n          <p>capital {country.capital}</p>\n          <p>area {country.area}</p>\n          <h3>{Object.entries(country.languages).map((language, languageIndex) =>\n            <li key={`language_${languageIndex}`}>{language[1]}</li>\n          )}</h3>\n          <img src={country.flags.png} alt={country.name.common} />\n          <h1>Weather in {country.name.common}</h1>\n        </div>)\n    })\n    : filteredCountries.length < 10\n      ? filteredCountries.map((country, countryIndex) => <div>{country.name.common}<button onClick={() => setShow({ ...show, display: !show.display, country })}>show</button></div>)\n      : <p>Too many matches, specify another filter</p>\n\n\n  return (\n    <div>\n      find countries  <input value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      {show.display ? <div>\n        <h1>{show.country.name.common}</h1>\n        <p>capital {show.country.capital}</p>\n        <p>area {show.country.area}</p>\n        <h3>{Object.entries(show.country.languages).map((language, languageIndex) =>\n          <li key={`language_${languageIndex}`}>{language[1]}</li>\n        )}</h3>\n        <img src={show.country.flags.png} alt={show.country.name.common} />\n      </div>\n        : output\n      }\n    </div>\n\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}