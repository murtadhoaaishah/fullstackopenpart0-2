{"ast":null,"code":"var _jsxFileName = \"/Users/murtadhoaaishah/Desktop/workspace/fs-open/part2/countries/src/App.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all').then(response => {\n      console.log(countries);\n      setCountries(response.data);\n    });\n  }, []);\n  const filteredCountries = query.trim() ? countries.filter(country => country.toLowerCase().includes(query.trim().toLowerCase())) : [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }\n  }), countries.length === 1 ? filteredCountries.map((country, countryIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: `country_${countryIndex}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, country.common.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"capital \", country.capital))) : country.length < 10 ? country.map((country, countryIndex) => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 52\n    }\n  }, country.name.common)) : 'Too many matches, specify another filter');\n};\n\nexport default App; // import React, { useState, useEffect } from 'react'\n// import axios from 'axios'\n// const App = () => {\n//   const [query, setQuery] = useState('')\n//   const [countries, setCountries] = useState([])\n//   const [show, setShow] = useState({ display: false, country: {} })\n//   const [weather, setWeather] = useState('')\n//   useEffect(() => {\n//     axios.get('https://restcountries.com/v3.1/all')\n//       .then(response => {\n//         setCountries(response.data)\n//       })\n//   }, [])\n//   // console.log(countries);`  \n//   const api_key = process.env.REACT_APP_API_KEY\n//   // console.log(api_key)\n//   // console.log(weather)\n//   // console.log(query)\n//   //a4c7660005ab48ae0cc3802440d15423\n//   //REACT_APP_API_KEY='489d87d30f660d1275056a5bd92b5664' npm start\n//   const fetchWeather = (country) => {\n//     axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${country.name.common}&appid=${api_key}`)\n//       .then(response => {\n//         setWeather(response.data)\n//       })\n//   }\n//   console.log({ weather });\n//   const filteredCountries = query.trim()\n//     ? countries.filter(country => country.name.common.toLowerCase()\n//       .includes(query.trim().toLowerCase()))\n//     : countries\n//   useEffect(() => {\n//     if (filteredCountries.length === 1) {\n//       fetchWeather(filteredCountries[0])\n//     }\n//   }, [query])\n//   const output = filteredCountries.length === 1\n//     ? (<div>\n//       <h1>{filteredCountries[0].name.common}</h1>\n//       <p>capital {filteredCountries[0].capital}</p>\n//       <p>area {filteredCountries[0].area}</p>\n//       <h3>{Object.entries(filteredCountries[0].languages).map((language, languageIndex) =>\n//         <li key={`language_${languageIndex}`}>{language[1]}</li>\n//       )}</h3>\n//       <img src={filteredCountries[0].flags.png} alt={filteredCountries[0].name.common} />\n//       <h1>Weather in {filteredCountries[0].name.common}</h1>\n//       {weather && <div> <p>temperature -{weather.main.temp}</p>\n//         <img src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} />\n//         <p>wind {weather.wind.speed} m/s</p>\n//       </div>}\n//     </div>)\n//     : filteredCountries.length < 10\n//       ? filteredCountries.map((country, countryIndex) => <div key={`show_key${country.name.common}`}>{country.name.common}<button onClick={() => { setShow({ ...show, display: !show.display, country }); fetchWeather(country) }}>show</button></div>)\n//       : <p>Too many matches, specify another filter</p>\n//   return (\n//     <div>\n//       find countries  <input value={query}\n//         onChange={e => setQuery(e.target.value)}\n//       />\n//       {show.display ? <div>\n//         <h1>{show.country.name.common}</h1>\n//         <p>capital {show.country.capital}</p>\n//         <p>area {show.country.area}</p>\n//         <h3>{Object.entries(show.country.languages).map((language, languageIndex) =>\n//           <li key={`language_${languageIndex}`}>{language[1]}</li>\n//         )}</h3>\n//         <img src={show.country.flags.png} alt={show.country.name.common} />\n//         {weather && <div> <p>temperature -{weather.main.temp}</p>\n//           <img src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} />\n//           <p>wind {weather.wind.speed} m/s</p>\n//         </div>}\n//       </div>\n//         : output\n//       }\n//     </div>\n//   )\n// }\n// export default App","map":{"version":3,"sources":["/Users/murtadhoaaishah/Desktop/workspace/fs-open/part2/countries/src/App.jsx"],"names":["React","useState","useEffect","axios","App","countries","setCountries","query","setQuery","get","then","response","console","log","data","filteredCountries","trim","filter","country","toLowerCase","includes","e","target","value","length","map","countryIndex","common","name","capital"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACM,GAAN,CAAU,oCAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACAC,MAAAA,YAAY,CAACK,QAAQ,CAACG,IAAV,CAAZ;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;AASA,QAAMC,iBAAiB,GAAGR,KAAK,CAACS,IAAN,KACtBX,SAAS,CAACY,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACC,WAAR,GAAsBC,QAAtB,CAA+Bb,KAAK,CAACS,IAAN,GAAaG,WAAb,EAA/B,CAA5B,CADsB,GAEtB,EAFJ;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACiB;AAAO,IAAA,KAAK,EAAEZ,KAAd;AACb,IAAA,QAAQ,EAAEc,CAAC,IAAIb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAIGlB,SAAS,CAACmB,MAAV,KAAqB,CAArB,GACGT,iBAAiB,CAACU,GAAlB,CAAsB,CAACP,OAAD,EAAUQ,YAAV,kBACtB;AAAK,IAAA,GAAG,EAAG,WAAUA,YAAa,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,OAAO,CAACS,MAAR,CAAeC,IAApB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYV,OAAO,CAACW,OAApB,CAFF,CADA,CADH,GAOGX,OAAO,CAACM,MAAR,GAAiB,EAAjB,GACEN,OAAO,CAACO,GAAR,CAAY,CAACP,OAAD,EAAUQ,YAAV,kBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,OAAO,CAACU,IAAR,CAAaD,MAAlB,CAAvC,CADF,GAEE,0CAbR,CADF;AAiBD,CAlCD;;AAoCA,eAAevB,GAAf,C,CAyBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [query, setQuery] = useState('')\n\n\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all')\n      .then(response => {\n        console.log(countries);\n        setCountries(response.data)\n      })\n  }, [])\n\n\n  const filteredCountries = query.trim()\n    ? countries.filter(country => country.toLowerCase().includes(query.trim().toLowerCase()))\n    : []\n  return (\n    <div>\n      find countries <input value={query}\n        onChange={e => setQuery(e.target.value)} />\n\n      {countries.length === 1\n        ? filteredCountries.map((country, countryIndex) =>\n          <div key={`country_${countryIndex}`}>\n            <h1>{country.common.name}</h1>\n            <p>capital {country.capital}</p>\n          </div>)\n\n        : country.length < 10\n          ? country.map((country, countryIndex) => <li>{country.name.common}</li>)\n          : 'Too many matches, specify another filter'}\n    </div>\n  )\n}\n\nexport default App\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react'\n// import axios from 'axios'\n\n// const App = () => {\n//   const [query, setQuery] = useState('')\n//   const [countries, setCountries] = useState([])\n//   const [show, setShow] = useState({ display: false, country: {} })\n//   const [weather, setWeather] = useState('')\n\n\n//   useEffect(() => {\n//     axios.get('https://restcountries.com/v3.1/all')\n//       .then(response => {\n//         setCountries(response.data)\n//       })\n//   }, [])\n//   // console.log(countries);`  \n\n//   const api_key = process.env.REACT_APP_API_KEY\n//   // console.log(api_key)\n\n//   // console.log(weather)\n//   // console.log(query)\n//   //a4c7660005ab48ae0cc3802440d15423\n//   //REACT_APP_API_KEY='489d87d30f660d1275056a5bd92b5664' npm start\n\n//   const fetchWeather = (country) => {\n//     axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${country.name.common}&appid=${api_key}`)\n//       .then(response => {\n//         setWeather(response.data)\n//       })\n//   }\n\n\n\n\n//   console.log({ weather });\n\n//   const filteredCountries = query.trim()\n//     ? countries.filter(country => country.name.common.toLowerCase()\n//       .includes(query.trim().toLowerCase()))\n//     : countries\n\n//   useEffect(() => {\n//     if (filteredCountries.length === 1) {\n//       fetchWeather(filteredCountries[0])\n//     }\n//   }, [query])\n\n\n\n\n//   const output = filteredCountries.length === 1\n//     ? (<div>\n//       <h1>{filteredCountries[0].name.common}</h1>\n//       <p>capital {filteredCountries[0].capital}</p>\n//       <p>area {filteredCountries[0].area}</p>\n//       <h3>{Object.entries(filteredCountries[0].languages).map((language, languageIndex) =>\n//         <li key={`language_${languageIndex}`}>{language[1]}</li>\n//       )}</h3>\n//       <img src={filteredCountries[0].flags.png} alt={filteredCountries[0].name.common} />\n//       <h1>Weather in {filteredCountries[0].name.common}</h1>\n//       {weather && <div> <p>temperature -{weather.main.temp}</p>\n//         <img src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} />\n//         <p>wind {weather.wind.speed} m/s</p>\n//       </div>}\n//     </div>)\n//     : filteredCountries.length < 10\n//       ? filteredCountries.map((country, countryIndex) => <div key={`show_key${country.name.common}`}>{country.name.common}<button onClick={() => { setShow({ ...show, display: !show.display, country }); fetchWeather(country) }}>show</button></div>)\n//       : <p>Too many matches, specify another filter</p>\n\n\n//   return (\n//     <div>\n//       find countries  <input value={query}\n//         onChange={e => setQuery(e.target.value)}\n//       />\n//       {show.display ? <div>\n//         <h1>{show.country.name.common}</h1>\n//         <p>capital {show.country.capital}</p>\n//         <p>area {show.country.area}</p>\n//         <h3>{Object.entries(show.country.languages).map((language, languageIndex) =>\n//           <li key={`language_${languageIndex}`}>{language[1]}</li>\n//         )}</h3>\n//         <img src={show.country.flags.png} alt={show.country.name.common} />\n//         {weather && <div> <p>temperature -{weather.main.temp}</p>\n//           <img src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} />\n//           <p>wind {weather.wind.speed} m/s</p>\n//         </div>}\n//       </div>\n//         : output\n//       }\n//     </div>\n\n//   )\n// }\n\n// export default App"]},"metadata":{},"sourceType":"module"}